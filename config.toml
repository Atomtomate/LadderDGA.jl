# input TOML for ladderDGA

[Model]
U    = 2.0 #1.0
mu   = 1.0 #0.5
beta = 15 #25  #25.0
nden = 1.0
Dimensions = 3

[Simulation]
nFermFreq = 41 #81
nBoseFreq = 40 #80
shift     = 0             # shift of center of bosonic frequency range
Nk        = 10            # IMPORTANT: in Fortran this is Nk x Nk and generated bei make_klist. TODO: adaptiv mesh
tail_corrected = true
force_full_local_bosonic_sum = false # instead of a usable interval for impurity quantities, use all bosonic frequencies (fortran: false)
force_full_bosonic_sum = false # instead of a usable interval for non local quantities (EoM), use all bosonic frequencies (fortran: true)
force_max_usable = true         # instead of comon usable range, use individual maximum ranges (fortran: true)
force_full_bosonic_chi = false  # compute all omega frequencies for chi and trilex
chi_unusable_fill_value = "chi_lambda" # can be "0", "chi_lambda" or "chi". sets either 0, lambda corrected or non lambda corrected values outside usable omega range
chi_only = false          # Should only chis_omega and chich_omega be calculated?
kInt = "FFT"              # TODO: only FFT available for now (naive and GL have to be activated in code)
rhs  = ""                 # TODO: implement possible modes: native (fixed for tc, error_comp for naive), 
                          #                                 fixed (n/2 (1 - n/2) - sum(chi_ch)), 
                          #                                 error_comp (chi_loc_ch + chi_loc_sp - chi_ch)

[Environment]
loadFortran = "text"      # julia, text, parquet, TODO: implement hdf5
writeFortran = false
loadAsymptotics = true
#inputDir = "/home/julian/Hamburg/ladderDGA3D_FFT_small"
inputDir = "/home/julian/Hamburg/ladderDGA3D_FFT"
#inputDir = "/home/julian/Hamburg/ED_Data/b25.0_U1.0/data"
inputVars = "vars.jld"
asymptVars = "vars_asympt_sums.jld"
cast_to_real = false      # TODO: not implemented. cast all arrays with vanishing imaginary part to real
loglevel = "debug"        # error, warn, info, debug
logfile = "stderr" #"run.out"        # STDOUT, STDERR, filename
progressbar = false        # true/false enable or disable progress bar

[legacy]
lambda_correction = true    # Should a lambda-correction be performed only in the spin-channel?

[Debug]
read_bubble = false
